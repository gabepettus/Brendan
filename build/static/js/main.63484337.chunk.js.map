{"version":3,"sources":["components/Header/index.js","components/About/index.js","components/Lessons/index.js","components/TestimonCard/index.js","components/Testimonials/index.js","components/Contact/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js","data/images/BrendanTeaching.jpg"],"names":["Header","Fragment","id","className","href","title","style","color","fontFamily","Component","About","src","pic","alt","bio","Lessons","lessons","map","lesson","index","key","TestimonCard","data","console","log","Container","Card","CardBody","CardText","text","name","Testimonials","testimons","testimon","Row","img","Contact","useState","submitting","status","serverState","setServerState","handleServerResponse","ok","msg","form","reset","onSubmit","e","preventDefault","target","axios","method","url","FormData","then","r","catch","response","error","CardTitle","FormGroup","Label","htmlFor","Input","type","required","placeholder","Button","disabled","Footer","App","props","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.63484337.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n// const Header = () => {\n  class Header extends Component {\n    render () {\n  // let resumeData = this.props.resumeData;\n  return (\n    <React.Fragment>\n    <header id=\"home\">\n      <nav id=\"nav-wrap\">\n          <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n        <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\n          <ul id=\"nav\" className=\"nav\">\n            <li className=\"current\"><a className=\"smoothscroll header-home-color\" href=\"#home\">Home</a></li>\n            <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n            <li><a className=\"smoothscroll\" href=\"#lessons\">Lessons</a></li>\n            <li><a className=\"smoothscroll\" href=\"#testimonials\">Testimonials</a></li>\n            {/* <li><a className=\"smoothscroll\" href=\"#getStarted\">Get Started</a></li> */}\n            <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\n          </ul>\n      </nav>\n\n      <div className=\"row banner \">\n          <div className=\"banner-text\">\n            <h1 className=\"responsive-headline\">Branden Bondurant</h1>\n            <h3 style={{color:'#fff', fontFamily:'sans-serif '}}>Music lessons offered in the Park Hill Neigborhood in Denver</h3>\n            <hr/>\n          </div>\n      </div>\n\n      <p className=\"scrolldown\">\n          <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n      </p>\n    </header>\n    </React.Fragment>\n  );\n    }\n}\n\nexport default Header;","import React from 'react';\n\nimport { bio } from '../../data/bio.json';\nimport pic from '../../data/images/BrendanTeaching.jpg';\n\nconst About = () => {\n  return (\n    <section id=\"about\">\n        <div className=\"row\">\n          <div className=\"three columns showWide\">\n              {/* <img className=\"profile-pic\"  src={pic} alt=\"Brendan, patient kind teacher with student\" /> */}\n              <img src={pic} alt=\"Brendan, patient kind teacher with student\" />\n          </div>\n          <div className=\"nine columns right-col\">\n              <h1>About</h1>\n              <p>{bio}</p>\n              <div className=\"row\">\n                {/* <div className=\"columns contact-details\"> </div> */}\n              </div>\n          </div>\n        </div>\n    </section>\n  );\n}\n\nexport default About;","import React from 'react';\nimport pic from '../../data/images/BrendanTeaching.jpg';\nimport  lessons from '../../data/lessons.json';\n\nconst Lessons = () => {\n  return (\n    <section id=\"lessons\">\n        <div className=\"row\">\n          <div className=\"nine columns left-col\">\n              <h1>Lessons</h1>\n              { lessons.map((lesson,index) => {\n                return(<p key={index}>{lesson}</p>);\n              })}\n              {/* <div className=\"row\"> <div className=\"columns contact-details\"> Give me a ring </div> </div> */}\n          </div>\n          <div className=\"three columns showWide\">\n              {/* <img className=\"profile-pic\"  src={pic} alt=\"Brendan, patient kind teacher with student\" /> */}\n              <img src={pic} alt=\"Brendan, patient kind teacher with student\" />\n          </div>\n        </div>\n    </section>\n  );\n}\n\nexport default Lessons;","import React from 'react';\nimport { \n  Card,\n  CardBody,\n  CardText,\n  CardSubtitle,\n  CardTitle,\n  CardImg,\n  Col,\n  Container,\n  Row\n} from 'reactstrap';\n\nimport './style.css';\n\nconst TestimonCard = ( data ) => {\n\n  console.log(\"data\",data);\n  // let imageWithPath = require(`../../data/images/${data.img}`);\n\n  return (\n    <>\n      <Container>\n      <Card className=\"mx-auto\">\n        <CardBody>\n          <CardText className=\"mt-3 card-text\"> \"{data.text}\" </CardText>\n            <h4> - {data.name}</h4>\n            {/* <h3>{data.name}</h3> */}\n            <h5>Student of Guitar since 1895</h5>\n        </CardBody>\n      </Card>\n      </Container>\n    </>\n  );\n}\n\nexport default TestimonCard;","import React from 'react';\nimport { Container,Row } from 'reactstrap';\n\nimport TestimonCard from '../TestimonCard';\nimport testimons  from '../../data/testimonials.json';\n\nimport './style.css';\n\nconst Testimonials = () => {\n  return (\n    <section id=\"testimonials\">\n              <h1>Testimonials</h1>\n      {/* <Container> */}\n              { testimons.map((testimon) => {\n                return(\n                  <Row className=\"test-row\" >\n                    <TestimonCard\n                      key={testimon.id}\n                      name={testimon.name}\n                      img={testimon.img}\n                      alt={testimon.alt}\n                      text={testimon.text}\n                    />\n                  </Row>\n                );\n              })} \n      {/* </Container> */}\n    </section>\n  )\n}\n\nexport default Testimonials;","import React, { useState } from 'react';\n// import { bio } from '../../data/bio.json';\nimport { \n  Card,\n  CardTitle,\n  CardText,\n  Button,\n  CardImg,\n  Container,\n  Row,\n  Col,\n  CardSubtitle,\n  FormGroup,\n  Label,\n  Input\n} from 'reactstrap';\nimport axios from 'axios';\n\nimport pic from '../../data/images/BrendanTeaching.jpg';\n\nlet text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum';\n\nconst Contact = () => {\n  const [serverState, setServerState] = useState ({\n  submitting: false,\n    status: null\n  });\n\n  const handleServerResponse = ( ok, msg, form) => {\n    setServerState({\n      submitting: false,\n      status: {ok, msg}\n    });\n    if (ok) {\n      form.reset();\n    }\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    setServerState({ submitting: true });\n    axios({\n      method: 'post',\n      url: 'https://formspree.io/mknvwqvr',\n      data: new FormData(form)\n    })\n    .then ( r => {\n      handleServerResponse(true, 'Thanks! Look forward to talking with you.',form);\n    })\n    .catch( r => {\n      handleServerResponse(false, r.response.data.error, form);\n    });\n  };\n\n  return (\n    <section id=\"contact\">\n        <div className=\"row\">\n          <div className=\"three columns showWide\">\n              <img src={pic} alt=\"Brendan, patient kind teacher with student\" />\n          </div>\n          <div className=\"nine columns main-col\">\n            <Card>\n            <form onSubmit={handleOnSubmit}>\n              <CardTitle className='mt-5 ml-5'>\n                {/* <h3>Gabe Pettus</h3> */}\n            <h1>Ask about getting started with lesson</h1>\n              </CardTitle>\n              {/* <CardSubtitle className='text-monospace ml-5'> */}\n                {/* Junior Software Engineer */}\n              {/* </CardSubtitle> */}\n              <CardText className='ml-5'>\n                 \n              </CardText>\n              <FormGroup className='mx-5'>\n                <Label htmlFor='email'>\n                  Email:\n                </Label>\n                <Input id='email' type='email' name='email' required />\n              </FormGroup>\n              <FormGroup className='mx-5'>\n                <Label htmlFor='message'>\n                  Message:\n                </Label>\n                <Input type='textarea' id='message' name='message' placeholder='Hi Brendan my name is <name> I am interesting in taking <instrument> lessons. I have <experiance> and am particualy interested in learning <backing cookies>' />\n              </FormGroup>\n              <FormGroup className='ml-5'>\n                <Button className='btn btn-lg m-2' type='submit' disabled={serverState.submitting}>\n                  Send Message\n                </Button>\n                {serverState.status && (\n                  <p className={!serverState.status.ok ? 'errorMsg' :''} >\n                    {serverState.status.msg}\n                  </p>\n                )}\n              </FormGroup> \n            </form>\n          </Card>\n          </div>\n        </div>\n    </section>\n  );\n}\n\nexport default Contact;","import React, { Component } from 'react';\n\nconst Footer = () => {\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          Copyright @2020\n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n\n\nexport default Footer;","import React, { Component } from 'react';\nimport './App.css';\n\nimport Header from './components/Header';\nimport About from './components/About';\nimport Lessons from './components/Lessons';\nimport Testimonials from './components/Testimonials';\nimport Started from './components/Started';\nimport Contact from './components/Contact';\nimport Footer from './components/Footer';\n\nimport data from './data/bio.json';\n\nconst App = () => {\n  // class App extends Component {\n    // render () {\n  return (\n    <div className=\"App\">\n      <Header />\n      <About props={data.bio}/>\n      <Lessons />\n      <Testimonials />\n      {/* <Started /> */}\n      <Contact />\n      <Footer />\n    </div>\n  );\n    // }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootswatch/dist/darkly/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/BrendanTeaching.2a5ece92.jpg\";"],"sourceRoot":""}